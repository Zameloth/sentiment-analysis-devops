trigger:
  branches:
    include:
      - main

variables:
  # Variables à configurer dans Library > Variable groups ou directement ici
  azureSubscription: 'MonServiceConnection'     # Nom de votre Service Connection Azure DevOps
  azureResourceGroup: '$(resource_group_name)'
  acrName: '$(acr_name)'
  imageName: '$(image_name)'
  imageTag: '$(Build.BuildId)'
  Location: 'westeurope'
  terraformWorkingDir: 'terraform'

stages:
  - stage: Terraform
    displayName: 'Terraform Plan & Apply'
    dependsOn: Build_and_Push
    jobs:
      - job: Terraform
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: AzureCLI@2
            displayName: 'Terraform Init'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              workingDirectory: $(terraformWorkingDir)
              scriptLocation: inlineScript
              inlineScript: |
                terraform init

          - task: AzureCLI@2
            displayName: 'Terraform Plan'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              workingDirectory: $(terraformWorkingDir)
              scriptLocation: inlineScript
              inlineScript: |
                terraform plan \
                  -var="acr_name=$(acrName)" \
                  -var="image_tag=$(imageTag)" \
                  -out=tfplan

          - task: AzureCLI@2
            displayName: 'Terraform Apply'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              workingDirectory: $(terraformWorkingDir)
              scriptLocation: inlineScript
              inlineScript: |
                terraform apply -auto-approve tfplan

  - stage: Build_and_Push
    displayName: 'Build Docker & Push to ACR'
    jobs:
      - job: Build
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Docker@2
            displayName: 'Build image'
            inputs:
              command: build
              Dockerfile: '**/Dockerfile'
              tags: |
                $(imageTag)
              containerRegistry: $(azureSubscription)
              repository: $(acrName).azurecr.io/$(imageName)

          - task: Docker@2
            displayName: 'Push image'
            inputs:
              command: push
              tags: |
                $(imageTag)
              containerRegistry: $(azureSubscription)
              repository: $(acrName).azurecr.io/$(imageName)


  - stage: Smoke_Test
    displayName: 'Smoke Tests'
    dependsOn: Terraform
    jobs:
      - job: Test
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: AzureCLI@2
            displayName: 'Get Web App URL'
            name: GetUrl
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                URL=$(az webapp show \
                  --resource-group $(azureResourceGroup) \
                  --name $(webapp_name) \
                  --query defaultHostName -o tsv)
                echo "##vso[task.setvariable variable=webAppUrl]https://$URL"

          - script: |
              echo "Healthcheck:"
              curl -fsS "$(webAppUrl)/health" || exit 1
              echo "Predict:"
              curl -fsS -X POST "$(webAppUrl)/predict" \
                -H "Content-Type: application/json" \
                -d '{ "text": "Test de déploiement" }' || exit 1
            displayName: 'Call /health and /predict'
