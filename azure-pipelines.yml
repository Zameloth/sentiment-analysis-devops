trigger:
  branches:
    include:
      - main

variables:
  # Nom EXACT de votre Service Connection ARM
  azureSubscription: 'myserviceconnection'
  # Variables Terraform
  resource_group_name: 'sentimentAnalysis'
  location: 'West Europe'
  acr_name: '4iabdSentimentACR'
  app_service_plan_name: 'myAppPlan'
  webapp_name: '4iabdSentimentAPIWebApp'
  image_name: '4iabdSentimentAPI'
  image_tag: '$(Build.BuildId)'
  terraformDir: 'terraform'


stages:

  - stage: Terraform
    displayName: 'Terraform Init → Plan → Apply'
    jobs:
      - job: TF
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: AzureCLI@2
            displayName: 'Terraform Init'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                cd $(terraformDir)
                terraform init

          - task: AzureCLI@2
            displayName: 'Terraform Plan'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                cd $(terraformDir)
                terraform plan \
                  -var="resource_group_name=$(resource_group_name)" \
                  -var="location=$(location)" \
                  -var="acr_name=$(acr_name)" \
                  -var="app_service_plan_name=$(app_service_plan_name)" \
                  -var="webapp_name=$(webapp_name)" \
                  -var="image_name=$(image_name)" \
                  -var="image_tag=$(image_tag)" \
                  -out=tfplan

          - task: AzureCLI@2
            displayName: 'Terraform Apply'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                cd $(terraformDir)
                terraform apply -auto-approve tfplan

  - stage: Build_and_Push
    displayName: 'Build Docker & Push to ACR'
    dependsOn: Terraform
    jobs:
      - job: Docker
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: AzureCLI@2
            displayName: 'Login to ACR'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az acr login --name $(acr_name)

          - task: Docker@2
            displayName: 'Build & Push image'
            inputs:
              command: buildAndPush
              repository: $(acr_name).azurecr.io/$(image_name)
              Dockerfile: '**/Dockerfile'
              tags: |
                $(image_tag)

  - stage: Smoke_Test
    displayName: 'Smoke Tests'
    dependsOn: Build_and_Push
    jobs:
      - job: Test
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: AzureCLI@2
            displayName: 'Healthcheck & Predict'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                URL=$(az webapp show \
                  --resource-group $(resource_group_name) \
                  --name $(webapp_name) \
                  --query defaultHostName -o tsv)
                echo "Health:" && curl -fsS https://$URL/health
                echo "Predict:" && curl -fsS -X POST https://$URL/predict \
                  -H "Content-Type: application/json" \
                  -d '{"text":"Test de déploiement"}'
